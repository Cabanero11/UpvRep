#BlueJ class context
comment0.target=TimeInstant
comment0.text=\n\ Clase\ TimeInstant.\ \n<p>\n\ Esta\ clase\ permite\ representar\ instantes\ o\ marcas\ de\ tiempo\n\ (<code>Timestamp</code>)\ con\ detalle\ de\ horas\ y\ minutos.\ As\u00ED,\ \ \n\ esta\ clase\ representa\ el\ momento\ que\ define\ un\ instante\ de\ tiempo,\n\ en\ este\ caso,\ las\ horas\ y\ los\ minutos\ de\ un\ d\u00EDa\ cualquiera.\n\ </p>\n\ \n\ \ @author\ IIP.\ Grado\ en\ Informatica.\ ETSINF,\ UPV\ \n\ \ @version\ Curso\ 2018-19\n
comment1.params=iniHours\ iniMinutes
comment1.target=TimeInstant(int,\ int)
comment10.params=tInstant
comment10.target=int\ compareTo(TimeInstant)
comment10.text=COMPLETAR
comment2.params=
comment2.target=TimeInstant()
comment2.text=COMPLETAR
comment3.params=
comment3.target=int\ getHours()
comment3.text=Devuelve\ las\ horas\ del\ TimeInstant.
comment4.params=
comment4.target=int\ getMinutes()
comment4.text=Devuelve\ los\ minutos\ del\ TimeInstant.
comment5.params=hh
comment5.target=void\ setHours(int)
comment5.text=Actualiza\ las\ horas\ del\ TimeInstant.
comment6.params=mm
comment6.target=void\ setMinutes(int)
comment6.text=Actualiza\ los\ minutos\ del\ TimeInstant.
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=Devuelve\ el\ TimeInstant\ en\ el\ formato\ "<code>hh\:mm</code>".
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=COMPLETAR
comment9.params=
comment9.target=int\ toMinutes()
comment9.text=COMPLETAR
numComments=11
